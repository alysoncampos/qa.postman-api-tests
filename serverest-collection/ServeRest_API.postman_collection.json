{
	"info": {
		"_postman_id": "b971658a-0922-4cab-81f6-fbdb60d67250",
		"name": "Postman ServeRest API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18111986"
	},
	"item": [
		{
			"name": "Get Usuarios",
			"item": [
				{
					"name": "listar todos usuarios",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta não é vazia\", function () {\r",
									"    pm.expect(jsonData.usuarios).to.not.have.lengthOf(0);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "listar usuarios por nome",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Resposta não é vazia\", function () {\r",
									"    pm.expect(jsonData.usuarios).to.not.have.lengthOf(0);\r",
									"});\r",
									"\r",
									"if (jsonData.usuarios.length > 0) {\r",
									"    pm.test(\"Verifica nomes retornados no array\", function () {\r",
									"\r",
									"        _.forEach(jsonData.usuarios, function(usuario) {\r",
									"            pm.expect(usuario.nome).to.eql(pm.environment.get(\"nome\"));\r",
									"        }) \r",
									"        \r",
									"    });\r",
									"}\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios/\" + jsonData._id,\r",
									"    method: \"DELETE\"\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// console.log(\"Requisição enviada\")\r",
									"\r",
									"const cadastrarUsuario = {\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios\",\r",
									"    method: \"POST\",\r",
									"    header: {\r",
									"        \"content-type\": \"application/json\",\r",
									"        \"accept\": \"application/json\"\r",
									"    },\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
									"    pm.expect(err).is.null;\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/usuarios?nome={{nome}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							],
							"query": [
								{
									"key": "nome",
									"value": "{{nome}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const cadastrarUsuario = {\r",
							"    url: pm.environment.get(\"base_url\") + \"/usuarios\",\r",
							"    method: \"POST\",\r",
							"    header: {\r",
							"        \"content-type\": \"application/json\",\r",
							"        \"accept\": \"application/json\"\r",
							"    },\r",
							"    body: {\r",
							"        mode: \"raw\",\r",
							"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
							"    }\r",
							"};\r",
							"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
							"    pm.expect(err).is.null;\r",
							"    pm.environment.set(\"_id\", res.json()._id);\r",
							"})"
						]
					}
				}
			]
		},
		{
			"name": "Get Usuarios por ID",
			"item": [
				{
					"name": "ID existente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const cadastrarUsuario = {\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios\",\r",
									"    method: \"POST\",\r",
									"    header: {\r",
									"        \"content-type\": \"application/json\",\r",
									"        \"accept\": \"application/json\"\r",
									"    },\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
									"    pm.expect(err).is.null;\r",
									"    pm.environment.set(\"_id\", res.json()._id);\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verificar dados do usuario retornado\", function () {\r",
									"    pm.expect(jsonData.nome).to.eql(pm.environment.get(\"nome\"));\r",
									"    pm.expect(jsonData.email).to.eql(pm.environment.get(\"email\"));\r",
									"    pm.expect(jsonData.password).to.eql(pm.environment.get(\"password\"));\r",
									"    pm.expect(jsonData.administrador).to.eql(pm.environment.get(\"administrador\"));\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios/\" + jsonData._id,\r",
									"    method: \"DELETE\"\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/{{_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								"{{_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "ID inexistente",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"verificar mensagem usuario não encontrado\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Usuário não encontrado\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios/:id",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Post Usuarios",
			"item": [
				{
					"name": "cadastro com sucesso",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica cadastro de usuario com sucesso\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Cadastro realizado com sucesso\");\r",
									"    pm.expect(jsonData._id).to.not.be.null;\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios/\" + jsonData._id,\r",
									"    method: \"DELETE\"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenValido}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "cadastro com nome nulo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica mensagem nome obrigatorio\", function () {\r",
									"    pm.expect(jsonData.nome).to.eql(\"nome deve ser uma string\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{tokenValido}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": null,\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/usuarios",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"usuarios"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Put Usuarios",
			"item": [
				{
					"name": "editar com sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'));"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica mensagem de edição com sucesso\", function () {\r",
									"    pm.expect(jsonData.message).to.eql(\"Registro alterado com sucesso\");\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios/\" + pm.environment.get(\"_id\"),\r",
									"    method: \"DELETE\"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": \"{{nome}}\",\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/usuarios/{{_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"{{_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "editar com nome invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"const jsonData = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code é 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Verifica mensagem de edição com nome invalido\", function () {\r",
									"    pm.expect(jsonData.nome).to.eql(\"nome deve ser uma string\");\r",
									"});\r",
									"\r",
									"pm.sendRequest({\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios/\" + pm.environment.get(\"_id\"),\r",
									"    method: \"DELETE\"\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"nome\": null,\r\n  \"email\": \"{{email}}\",\r\n  \"password\": \"{{password}}\",\r\n  \"administrador\": \"{{administrador}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/usuarios/{{_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"{{_id}}"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							"const cadastrarUsuario = {\r",
							"    url: pm.environment.get(\"base_url\") + \"/usuarios\",\r",
							"    method: \"POST\",\r",
							"    header: {\r",
							"        \"content-type\": \"application/json\",\r",
							"        \"accept\": \"application/json\"\r",
							"    },\r",
							"    body: {\r",
							"        mode: \"raw\",\r",
							"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
							"    }\r",
							"};\r",
							"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
							"    pm.expect(err).is.null;\r",
							"    pm.environment.set(\"_id\", res.json()._id);\r",
							"});"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Delete Usuarios",
			"item": [
				{
					"name": "excluir com sucesso",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const cadastrarUsuario = {\r",
									"    url: pm.environment.get(\"base_url\") + \"/usuarios\",\r",
									"    method: \"POST\",\r",
									"    header: {\r",
									"        \"content-type\": \"application/json\",\r",
									"        \"accept\": \"application/json\"\r",
									"    },\r",
									"    body: {\r",
									"        mode: \"raw\",\r",
									"        raw: JSON.stringify(pm.environment.get(\"novoUsuario\"))\r",
									"    }\r",
									"};\r",
									"pm.sendRequest(cadastrarUsuario, function(err, res) {\r",
									"    pm.expect(err).is.null;\r",
									"    pm.environment.set(\"_id\", res.json()._id);\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuarios/{{_id}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								"{{_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "excluir com ID invalido",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 400\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/usuarios/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"usuarios",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{tokenSeparado}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"pm.environment.set(\"nome\", pm.environment.replaceIn('{{$randomFullName}}'));",
					"",
					"pm.environment.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
					"",
					"pm.environment.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))",
					"",
					"pm.environment.set(\"administrador\", pm.variables.replaceIn('{{$randomBoolean}}'))",
					"",
					"const usuario = {",
					"    \"nome\" : pm.environment.get(\"nome\"),",
					"    \"email\": pm.environment.get(\"email\"),",
					"    \"password\": pm.environment.get(\"password\"),",
					"    \"administrador\": pm.environment.get(\"administrador\")",
					"}",
					"pm.environment.set(\"novoUsuario\", usuario);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}